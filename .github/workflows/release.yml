name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.target.runs-on }}
    strategy:
      matrix:
        target:
          - name: linux-amd64
            runs-on: ubuntu-20.04
          - name: linux-aarch64
            runs-on: ubuntu-20.04
          - name: darwin-arm64
            runs-on: macos-14
      fail-fast: true

    steps:
      - uses: actions/checkout@v3
      - name: Prepare for build
        run: |
          bazel/setup-ci.sh
          mkdir -p editors/code/dist
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
      - name: Build
        run: bazel build -c opt ${{ matrix.target.name == 'linux-aarch64' && '--platforms @zig_sdk//platform:linux_arm64' || '' }} //crates/starpls
      - uses: actions/upload-artifact@v4
        with:
          name: starpls-${{ matrix.target.name }}
          path: bazel-bin/crates/starpls/starpls

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare for build
        run: |
          echo 'import %workspace%/bazel/remote-cache.bazelrc' >>.bazelrc
          echo "build --remote_header=x-buildbuddy-api-key=$BUILDBUDDY_API_KEY" >>.bazelrc
          echo "startup --output_user_root=C:/b" >>.bazelrc
          echo "startup --windows_enable_symlinks" >>.bazelrc
          mkdir -p editors/code/dist
        shell: bash
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
      - name: Build
        run: bazel -c opt //crates/starpls
      - uses: actions/upload-artifact@v4
        with:
          name: starpls-windows-amd64
          path: bazel-bin/crates/starpls/starpls.exe

  release:
    name: Release
    needs: [build, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: starpls-*
      - name: Prepare release artifacts
        run: |
          mkdir -p release
          mv artifacts/starpls-linux-aarch64/starpls release/starpls-linux-aarch64
          mv artifacts/starpls-linux-amd64/starpls release/starpls-linux-amd64
          mv artifacts/starpls-darwin-arm64/starpls release/starpls-darwin-arm64
          mv artifacts/starpls-windows-amd64/starpls.exe release/starpls-windows-amd64.exe
          chmod +x release/starpls-*

          # Also create archives for usage by installation methods like Homebrew.
          # Eventually, we'll remove the non-zipped binaries above.
          cd release
          cp starpls-linux-aarch64 starpls && tar -czvf starpls-linux-aarch64.tar.gz starpls && rm starpls
          cp starpls-linux-amd64 starpls && tar -czvf starpls-linux-amd64.tar.gz starpls && rm starpls
          cp starpls-darwin-arm64 starpls && tar -czvf starpls-darwin-arm64.tar.gz starpls && rm starpls
          cp starpls-windows-amd64.exe starpls.exe && zip starpls-windows-amd64.zip starpls.exe && rm starpls.exe
      - name: Show release artifacts
        run: find release
      - name: Create release
        run: |
          gh release create ${{ github.ref_name }} release/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
