{
    "builtins": [
        {
            "name": "module_extension",
            "doc": "Creates a new module extension. Store it in a global value, so that it can be exported and used in a MODULE.bazel file with <code>use_extension</code>.",
            "callable": {
                "params": [
                    {
                        "name": "implementation",
                        "type": "Unknown",
                        "doc": "The function that implements this module extension. Must take a single parameter, <code>module_ctx</code>. The function is called once at the beginning of a build to determine the set of available repos.",
                        "default_value": "",
                        "is_mandatory": true,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "tag_classes",
                        "type": "Unknown",
                        "doc": "A dictionary to declare all the tag classes used by the extension. It maps from the name of the tag class to a <code>tag_class</code> object.",
                        "default_value": "{}",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "doc",
                        "type": "string; or None",
                        "doc": "A description of the module extension that can be extracted by documentation generating tools.",
                        "default_value": "None",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "environ",
                        "type": "sequence of strings",
                        "doc": "Provides a list of environment variable that this module extension depends on. If an environment variable in that list changes, the extension will be re-evaluated.",
                        "default_value": "[]",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "os_dependent",
                        "type": "boolean",
                        "doc": "Indicates whether this extension is OS-dependent or not",
                        "default_value": "False",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "arch_dependent",
                        "type": "boolean",
                        "doc": "Indicates whether this extension is architecture-dependent or not",
                        "default_value": "False",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    }
                ],
                "return_type": "Unknown"
            }
        },
        {
            "name": "repository_rule",
            "doc": "Creates a new repository rule. Store it in a global value, so that it can be loaded and called from a <code>module extension</code> implementation function, or used by <code>use_repo_rule</code>.",
            "callable": {
                "params": [
                    {
                        "name": "implementation",
                        "type": "Unknown",
                        "doc": "The function that implements this rule. Must have a single parameter, <code>repository_ctx</code>. The function is called during the loading phase for each instance of the rule.",
                        "default_value": "",
                        "is_mandatory": true,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "attrs",
                        "type": "dict; or None",
                        "doc": "dictionary to declare all the attributes of the rule. It maps from an attribute name to an attribute object (see attr module). Attributes starting with _ are private, and can be used to add an implicit dependency on a label to a file (a repository rule cannot depend on a generated artifact). The attribute name is implicitly added and must not be specified.",
                        "default_value": "None",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "local",
                        "type": "boolean",
                        "doc": "Indicate that this rule fetches everything from the local system and should be reevaluated at every fetch.",
                        "default_value": "None",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "environ",
                        "type": "sequence of strings",
                        "doc": "Deprecated. This parameter has been deprecated. Migrate to <code>repository_ctx.getenv</code> instead. Provides a list of environment variable that this repository rule depends on. If an environment variable in that list change, the repository will be refetched.",
                        "default_value": "[]",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "configure",
                        "type": "boolean",
                        "doc": "Indicate that the repository inspects the system for configuration purpose",
                        "default_value": "False",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "remotable",
                        "type": "boolean",
                        "doc": "Experimental. This parameter is experimental and may change at any time. Please do not depend on it. It may be enabled on an experimental basis by setting <code>---experimental_repo_remote_exec</code>. Compatible with remote execution",
                        "default_value": "False",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "doc",
                        "type": "string; or None",
                        "doc": "A description of the repository rule that can be extracted by documentation generating tools.",
                        "default_value": "None",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    }
                ],
                "return_type": "callable"
            }
        },
        {
            "name": "tag_class",
            "doc": "Creates a new <code>tag_class</code> object, which defines an attribute schema for a class of tags, which are data objects usable by a module extension.",
            "callable": {
                "params": [
                    {
                        "name": "attrs",
                        "type": "dict",
                        "doc": "A dictionary to declare all the attributes of this tag class. It maps from an attribute name to an attribute object (see attr module).",
                        "default_value": "{}",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    },
                    {
                        "name": "doc",
                        "type": "string; or None",
                        "doc": "A description of the tag class that can be extracted by documentation generating tools.",
                        "default_value": "None",
                        "is_mandatory": false,
                        "is_star_arg": false,
                        "is_star_star_arg": false
                    }
                ],
                "return_type": "tag_class"
            }
        }
    ]
}
