name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.target.runs-on }}
    strategy:
      matrix:
        target:
          - name: linux-amd64
            runs-on: ubuntu-20.04
          - name: linux-aarch64
            runs-on: ubuntu-20.04
          - name: darwin-arm64
            runs-on: macos-14
      fail-fast: true

    steps:
      - uses: actions/checkout@v3
      - name: Prepare for build
        run: |
          cp bazel/remote-cache.bazelrc .bazelrc
          echo "build --remote_header=x-buildbuddy-api-key=$BUILDBUDDY_API_KEY" >> .bazelrc
          mkdir -p editors/code/dist
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
      - name: Build
        run: bazel build -c opt //crates/starpls:${{ matrix.target.name == 'linux-aarch64' && 'starpls_arm' || 'starpls' }}
      - uses: actions/upload-artifact@v4
        with:
          name: starpls-${{ matrix.target.name }}
          path: bazel-bin/crates/starpls/${{ matrix.target.name == 'linux-aarch64' && 'starpls_arm' || 'starpls' }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo test
